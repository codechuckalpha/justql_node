[
  {
    "id": "1750860972031",
    "name": "test query",
    "query": "select * from ref_periods",
    "createdAt": "2025-06-25T14:16:12.031Z",
    "updatedAt": "2025-06-25T14:17:35.863Z"
  },
  {
    "id": "1750775668158",
    "name": "basic_usage_checker",
    "query": "select concat(d.date, ' ', p.time_period) as date_time,\n\t\tconcat(r.name, '-', d.conn_type_id) as region_conn_type,\n\t\tsum(d.usage_amount) as usage_amount\n\t\tfrom data_intraday_agg d\n\t\tleft join ref_periods p on p.id = d.period_id\n\t\tleft join ref_regions r on r.id = d.region_id\n\t\twhere d.data_code in(0110,1110)\n\t\tand d.date > current_date - interval 1 day\n\t\tgroup by concat(d.date, ' ', p.time_period),\n \t\tconcat(r.name, '-', d.conn_type_id)",
    "createdAt": "2025-06-24T14:34:28.158Z",
    "updatedAt": "2025-06-26T12:00:21.370Z"
  },
  {
    "id": "1750663727182",
    "name": "rank_anytime_vs_cons_8",
    "query": "WITH period_range_cons_8 AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42 -- For cons_8, periods up to 40\n),\nperiod_range_anytime AS (\n    SELECT\n        id AS period_id,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id <= 48 -- For anytime, all periods up to 48\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2024-12-31'\n        AND region_id = 3\n),\n-- Daily average prices for consecutive 8-period ranges\ndaily_avg_prices_cons_8 AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        ROUND(AVG(s.spot_price), 2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range_cons_8 pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\n-- Ranked daily average prices for consecutive 8-period ranges\nranked_daily_avg_prices_cons_8 AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.start_period,\n        dap.end_period,\n        dap.time_period,\n        dap.average_spot_price_for_range,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range ASC\n        ) AS rank_lowest_avg_price_daily\n    FROM\n        daily_avg_prices_cons_8 dap\n),\n-- Overall rank for consecutive 8-period ranges (cons_8 metric)\noverall_rank_cons_8 AS (\n    SELECT\n        rdap.time_period,\n        'cons_8' AS metric,\n        CAST(RANK() OVER (\n            ORDER BY SUM(rdap.rank_lowest_avg_price_daily) ASC\n        ) AS CHAR) AS overall_rank -- Cast to CHAR directly here for UNION consistency\n    FROM\n        ranked_daily_avg_prices_cons_8 rdap\n    GROUP BY\n        rdap.time_period\n),\n-- Daily average prices for individual periods (anytime logic)\ndaily_avg_prices_anytime AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.period_id,\n        pr.time_period,\n        ROUND(AVG(s.spot_price), 2) AS average_spot_price_for_period\n    FROM\n        spot s\n    JOIN\n        period_range_anytime pr ON s.period_id = pr.period_id\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.period_id,\n        pr.time_period\n),\n-- Ranked daily average prices for individual periods\nranked_daily_avg_prices_anytime AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.period_id,\n        dap.time_period,\n        dap.average_spot_price_for_period,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_period ASC\n        ) AS rank_lowest_avg_price_daily\n    FROM\n        daily_avg_prices_anytime dap\n),\n-- Overall rank for individual periods (anytime metric)\noverall_rank_anytime AS (\n    SELECT\n        rdap.time_period,\n        'anytime' AS metric,\n        CAST(RANK() OVER (\n            ORDER BY SUM(rdap.rank_lowest_avg_price_daily) ASC\n        ) AS CHAR) AS overall_rank -- Cast to CHAR directly here for UNION consistency\n    FROM\n        ranked_daily_avg_prices_anytime rdap\n    GROUP BY\n        rdap.time_period\n)\n-- Combine the results, excluding rows where cons_8 would be NULL\nSELECT\n    time_period,\n    metric,\n    overall_rank\nFROM\n    overall_rank_cons_8\n\nUNION ALL\n\nSELECT\n    time_period,\n    metric,\n    overall_rank\nFROM\n    overall_rank_anytime\nORDER BY\n    time_period ASC, metric DESC;",
    "createdAt": "2025-06-23T07:28:47.182Z",
    "updatedAt": "2025-06-23T07:29:13.669Z"
  },
  {
    "id": "1750643597538",
    "name": "Basic temperature query",
    "query": "select \n concat(w.date, ' ', p.time_period) as date_time,\ns.city,\navg(w.temp)\nfrom weather_historicals w\nleft join ref_periods p on p.id = w.period_id\nleft join ref_stations s on s.id = w.station_id and s.is_active = 1\nwhere w.date > current_date - interval 30 day\ngroup by w.date, p.id, w.station_id",
    "createdAt": "2025-06-23T01:53:17.538Z",
    "updatedAt": "2025-06-23T01:53:29.821Z"
  },
  {
    "id": "1750561606668",
    "name": "jepx_monthly_avg",
    "query": "select date_format(j.date, '%Y-%m') as `month`,\n\tj.region_id,\n\tavg(j.spot_price) as avg_monthly_price\n\tfrom jepx_da_pivot j\n\tleft join ref_periods p on p.id = j.period_id\n    left join ref_regions r on r.id = j.region_id\n\twhere j.date > current_date - interval 5 year\n\tand j.region_id in(3,6)\n\tgroup by date_format(j.date, '%Y-%m'), j.region_id\n\torder by date_format(j.date, '%Y-%m') asc",
    "createdAt": "2025-06-22T03:06:46.668Z",
    "updatedAt": "2025-06-22T03:07:03.455Z"
  },
  {
    "id": "1750524072924",
    "name": "high/low 8 vs cons 8 by year",
    "query": "WITH period_range AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2022-12-31' -- Changed date filter to 2022-12-31\n        AND region_id = 3\n),\ndaily_avg_prices AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        round(AVG(s.spot_price),2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\nranked_daily_avg_prices AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.start_period,\n        dap.end_period,\n        dap.time_period,\n        dap.average_spot_price_for_range,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range ASC\n        ) AS rank_lowest_avg_price_daily,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range DESC\n        ) AS rank_highest_avg_price_daily\n    FROM\n        daily_avg_prices dap\n),\ndaily_spread_8_cons AS (\n    SELECT\n        DATE,\n        region_id,\n        (MAX(CASE WHEN rank_highest_avg_price_daily = 1 THEN average_spot_price_for_range END) -\n         MAX(CASE WHEN rank_lowest_avg_price_daily = 1 THEN average_spot_price_for_range END)) AS spread_value\n    FROM\n        ranked_daily_avg_prices\n    GROUP BY\n        DATE,\n        region_id\n),\ndaily_spot_ranks AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2022-12-31' -- Changed date filter to 2022-12-31\n        AND region_id = 3\n),\ndaily_spread_8 AS (\n    SELECT\n        DATE,\n        region_id,\n        ROUND((AVG(CASE WHEN rn_desc_spot <= 8 THEN spot_price END) -\n               AVG(CASE WHEN rn_asc_spot <= 8 THEN spot_price END)),2) AS spread_value\n    FROM\n        daily_spot_ranks\n    GROUP BY\n        DATE,\n        region_id\n)\n-- Yearly average for spread_8_cons\nSELECT\n    DATE_FORMAT(ds.DATE, '%Y') AS date, -- Format to year only\n    'spread_8_cons' AS metric,\n    ROUND(AVG(ds.spread_value), 2) AS value\nFROM\n    daily_spread_8_cons ds\nGROUP BY\n    DATE_FORMAT(ds.DATE, '%Y') -- Group by year\n\nUNION ALL\n\n-- Yearly average for spread_8\nSELECT\n    DATE_FORMAT(ds.DATE, '%Y') AS date, -- Format to year only\n    'spread_8' AS metric,\n    ROUND(AVG(ds.spread_value), 2) AS value\nFROM\n    daily_spread_8 ds\nGROUP BY\n    DATE_FORMAT(ds.DATE, '%Y') -- Group by year\nORDER BY\n    date DESC, metric;",
    "createdAt": "2025-06-21T16:41:12.924Z",
    "updatedAt": "2025-06-21T16:41:21.263Z"
  },
  {
    "id": "1750523809584",
    "name": "high/low 8 vs cons 8 by month",
    "query": "WITH period_range AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '20221231' -- Changed date filter\n        AND region_id = 3\n),\ndaily_avg_prices AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        round(AVG(s.spot_price),2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\nranked_daily_avg_prices AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.start_period,\n        dap.end_period,\n        dap.time_period,\n        dap.average_spot_price_for_range,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range ASC\n        ) AS rank_lowest_avg_price_daily,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range DESC\n        ) AS rank_highest_avg_price_daily\n    FROM\n        daily_avg_prices dap\n),\ndaily_spread_8_cons AS (\n    SELECT\n        DATE,\n        region_id,\n        (MAX(CASE WHEN rank_highest_avg_price_daily = 1 THEN average_spot_price_for_range END) -\n         MAX(CASE WHEN rank_lowest_avg_price_daily = 1 THEN average_spot_price_for_range END)) AS spread_value -- Calculate daily spread here\n    FROM\n        ranked_daily_avg_prices\n    GROUP BY\n        DATE,\n        region_id\n),\ndaily_spot_ranks AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '20221231' -- Changed date filter\n        AND region_id = 3\n),\ndaily_spread_8 AS (\n    SELECT\n        DATE,\n        region_id,\n        ROUND((AVG(CASE WHEN rn_desc_spot <= 8 THEN spot_price END) -\n               AVG(CASE WHEN rn_asc_spot <= 8 THEN spot_price END)),2) AS spread_value -- Calculate daily spread here\n    FROM\n        daily_spot_ranks\n    GROUP BY\n        DATE,\n        region_id\n)\n-- Monthly average for spread_8_cons\nSELECT\n    DATE_FORMAT(ds.DATE, '%Y-%m') AS date,\n    'spread_8_cons' AS metric,\n    ROUND(AVG(ds.spread_value), 2) AS value\nFROM\n    daily_spread_8_cons ds\nGROUP BY\n    DATE_FORMAT(ds.DATE, '%Y-%m')\n\nUNION ALL\n\n-- Monthly average for spread_8\nSELECT\n    DATE_FORMAT(ds.DATE, '%Y-%m') AS date,\n    'spread_8' AS metric,\n    ROUND(AVG(ds.spread_value), 2) AS value\nFROM\n    daily_spread_8 ds\nGROUP BY\n    DATE_FORMAT(ds.DATE, '%Y-%m')\nORDER BY\n    date DESC, metric;",
    "createdAt": "2025-06-21T16:36:49.584Z",
    "updatedAt": "2025-06-21T16:37:09.112Z"
  },
  {
    "id": "1750523364823",
    "name": "high/low 8 vs cons 8 by day",
    "query": "WITH period_range AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2024-12-31'\n        AND region_id = 3\n),\ndaily_avg_prices AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        round(AVG(s.spot_price),2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\nranked_daily_avg_prices AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.start_period,\n        dap.end_period,\n        dap.time_period,\n        dap.average_spot_price_for_range,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range ASC\n        ) AS rank_lowest_avg_price_daily,\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range DESC\n        ) AS rank_highest_avg_price_daily\n    FROM\n        daily_avg_prices dap\n),\ndaily_spread_8_cons AS (\n    SELECT\n        DATE,\n        region_id,\n        MAX(CASE WHEN rank_lowest_avg_price_daily = 1 THEN average_spot_price_for_range END) AS lowest_avg_price,\n        MAX(CASE WHEN rank_highest_avg_price_daily = 1 THEN average_spot_price_for_range END) AS highest_avg_price\n    FROM\n        ranked_daily_avg_prices\n    GROUP BY\n        DATE,\n        region_id\n),\ndaily_spot_ranks AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY DATE, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2024-12-31'\n        AND region_id = 3\n)\n-- Select spread_8_cons from the first query logic\nSELECT\n    date_format(ds.DATE, '%Y-%m-%d') AS date,\n    'spread_8_cons' AS metric,\n    (ds.highest_avg_price - ds.lowest_avg_price) AS value\nFROM\n    daily_spread_8_cons ds\n\nUNION ALL\n\n-- Select spread_8 from the second query logic\nSELECT\n    date_format(j.date, '%Y-%m-%d') AS date,\n    'spread_8' AS metric,\n    ROUND((AVG(CASE WHEN j.rn_desc_spot <= 8 THEN j.spot_price END) - AVG(CASE WHEN j.rn_asc_spot <= 8 THEN j.spot_price END)),2) AS value\nFROM\n    daily_spot_ranks AS j\nGROUP BY\n    j.date\nORDER BY\n    date DESC, metric;",
    "createdAt": "2025-06-21T16:29:24.824Z",
    "updatedAt": "2025-06-21T16:30:00.749Z"
  },
  {
    "id": "1750523044109",
    "name": "cons 8 by day",
    "query": "WITH period_range AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2024-12-31'\n        AND region_id = 3\n),\ndaily_avg_prices AS (\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        round(AVG(s.spot_price),2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\nranked_daily_avg_prices AS (\n    SELECT\n        dap.DATE,\n        dap.region_id,\n        dap.start_period,\n        dap.end_period,\n        dap.time_period,\n        dap.average_spot_price_for_range,\n        -- Calculate rank for lowest average price\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range ASC\n        ) AS rank_lowest_avg_price_daily,\n        -- Calculate rank for highest average price (to easily pick the highest)\n        RANK() OVER (\n            PARTITION BY dap.DATE, dap.region_id\n            ORDER BY dap.average_spot_price_for_range DESC\n        ) AS rank_highest_avg_price_daily\n    FROM\n        daily_avg_prices dap\n),\ndaily_spread AS (\n    SELECT\n        DATE,\n        region_id,\n        -- Get the average price where the rank for the lowest price is 1\n        MAX(CASE WHEN rank_lowest_avg_price_daily = 1 THEN average_spot_price_for_range END) AS lowest_avg_price,\n        -- Get the average price where the rank for the highest price is 1\n        MAX(CASE WHEN rank_highest_avg_price_daily = 1 THEN average_spot_price_for_range END) AS highest_avg_price\n    FROM\n        ranked_daily_avg_prices\n    GROUP BY\n        DATE,\n        region_id\n)\nSELECT\n    ds.DATE,\n    'spread_8_cons' AS metric,\n    (ds.highest_avg_price - ds.lowest_avg_price) AS value\nFROM\n    daily_spread ds\nORDER BY\n    ds.DATE;",
    "createdAt": "2025-06-21T16:24:04.109Z",
    "updatedAt": "2025-06-21T16:24:22.086Z"
  },
  {
    "id": "1750518706390",
    "name": "consecutive 8 periods by rank",
    "query": "# Rolling 8 periods low to high\nWITH period_range AS (\n    SELECT\n        id AS start_period,\n        id + 8 AS end_period,\n        time_period\n    FROM\n        ref_periods\n    WHERE\n        id < 42\n),\nspot AS (\n    SELECT\n        DATE,\n        period_id,\n        region_id,\n        spot_price\n    FROM\n        jepx_da_pivot\n    WHERE\n        DATE > '2024-12-31' -- Corrected date literal\n        AND region_id = 3\n),\ndaily_avg_prices AS (\n    -- This CTE calculates the average spot price for each period_range per day\n    SELECT\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period,\n        round(AVG(s.spot_price),2) AS average_spot_price_for_range\n    FROM\n        spot s\n    JOIN\n        period_range pr ON s.period_id BETWEEN pr.start_period AND pr.end_period\n    GROUP BY\n        s.DATE,\n        s.region_id,\n        pr.start_period,\n        pr.end_period,\n        pr.time_period\n),\n\nranked_daily_avg_prices  AS (SELECT\n    dap.DATE,\n    dap.region_id,\n    dap.start_period,\n    dap.end_period,\n    dap.time_period,\n    dap.average_spot_price_for_range,\n    -- Add the rank column here\n    RANK() OVER (\n        PARTITION BY dap.DATE, dap.region_id -- Rank independently for each date and region\n        ORDER BY dap.average_spot_price_for_range ASC -- Order by lowest average price (ascending)\n    ) AS rank_lowest_avg_price_daily\nFROM\n    daily_avg_prices dap\nORDER BY\n    #dap.DATE,\n    #dap.region_id,\n    rank_lowest_avg_price_daily\n\n),-- Order by the new rank to see the lowest prices first\n    \noverall_rank AS (\n\tSELECT\n\t    rdap.start_period,\n\t    rdap.end_period,\n\t    rdap.time_period,\n\t    #SUM(rdap.rank_lowest_avg_price_daily) AS total_rank_sum,\n\t    RANK() OVER (\n\t        ORDER BY SUM(rdap.rank_lowest_avg_price_daily) ASC -- A lower sum of ranks means a better overall performance (lower average prices)\n\t    ) AS overall_rank\n\tFROM\n\t    ranked_daily_avg_prices rdap\n\tGROUP BY\n\t    rdap.start_period,\n\t    rdap.end_period,\n\t    rdap.time_period\n\tORDER BY\n\t    overall_rank ASC -- Order by the overall rank to see the best performing periods first\n)\n\n#SELECT * FROM daily_avg_prices;\n#SELECT * FROM ranked_daily_avg_prices;\n#SELECT * FROM overall_rank;  \nSELECT time_period, overall_rank FROM overall_rank order by time_period asc;",
    "createdAt": "2025-06-21T15:11:46.390Z",
    "updatedAt": "2025-06-21T15:12:05.312Z"
  },
  {
    "id": "1750518469067",
    "name": "high/low 4-8 spreads",
    "query": "# Transposed high low 4 and 8\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'avg_4_lowest_spot_price' AS metric,\n    round(AVG(CASE WHEN j.rn_asc_spot <= 4 THEN j.spot_price END),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nUNION ALL\n\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'avg_4_highest_spot_price' AS metric,\n    round(AVG(CASE WHEN j.rn_desc_spot <= 4 THEN j.spot_price END),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nUNION ALL\n\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'avg_8_lowest_spot_price' AS metric,\n    round(AVG(CASE WHEN j.rn_asc_spot <= 8 THEN j.spot_price END),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nUNION ALL\n\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'avg_8_highest_spot_price' AS metric,\n    round(AVG(CASE WHEN j.rn_desc_spot <= 8 THEN j.spot_price END),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nUNION ALL\n\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'spread_4' AS metric,\n    ROUND((AVG(CASE WHEN j.rn_desc_spot <= 4 THEN j.spot_price END) - AVG(CASE WHEN j.rn_asc_spot <= 4 THEN j.spot_price END)),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nUNION ALL\n\nSELECT \n    date_format(j.date, '%Y-%m-%d') as date,\n    'spread_8' AS metric,\n    ROUND((AVG(CASE WHEN j.rn_desc_spot <= 8 THEN j.spot_price END) - AVG(CASE WHEN j.rn_asc_spot <= 8 THEN j.spot_price END)),2) AS value\nFROM (\n    SELECT\n        date,\n        period_id,\n        region_id,\n        spot_price,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price ASC) AS rn_asc_spot,\n        ROW_NUMBER() OVER (PARTITION BY date, region_id ORDER BY spot_price DESC) AS rn_desc_spot\n    FROM\n        jepx_da_pivot\n        WHERE DATE > 20221231\n        AND region_id = 3\n) AS j\nGROUP BY j.date\n\nORDER BY date DESC, metric;",
    "createdAt": "2025-06-21T15:07:49.067Z",
    "updatedAt": "2025-06-21T15:08:14.176Z"
  },
  {
    "id": "1750518267116",
    "name": "basic jepx 30min",
    "query": "select concat(j.date, ' ', p.time_period) as date_time,\n\t#j.region_id,\n    r.jp_name,\n\tj.spot_price\n\tfrom jepx_da_pivot j\n\tleft join ref_periods p on p.id = j.period_id\n    left join ref_regions r on r.id = j.region_id\n\twhere j.date > CURRENT_DATE - interval 1 day\n\tgroup by j.date, j.period_id, j.region_id\n\torder by j.date desc",
    "createdAt": "2025-06-21T15:04:27.116Z",
    "updatedAt": "2025-06-26T11:56:38.363Z"
  },
  {
    "id": "1750518221967",
    "name": "basic jepx daily",
    "query": "select #concat(j.date, ' ', p.time_period) as date_time,\n    j.date,\n\tr.jp_name,\n\tavg(j.spot_price)\n\tfrom jepx_da_pivot j\n\tleft join ref_periods p on p.id = j.period_id\n    left join ref_regions r on r.id = j.region_id\n\twhere j.date > CURRENT_DATE - interval 30 day\n\tgroup by j.date, j.region_id\n\torder by j.date desc",
    "createdAt": "2025-06-21T15:03:41.967Z",
    "updatedAt": "2025-06-26T11:56:08.175Z"
  }
]